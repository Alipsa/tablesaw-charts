plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id('io.github.gradle-nexus.publish-plugin') version '1.3.0'
    id "com.github.ben-manes.versions" version "0.48.0"
}

group = 'se.alipsa.tablesaw'
version = '1.0.0-SNAPSHOT'
description = 'A Tablesaw extension providing a higher level of abstraction compared to jsplot and enables a chart to be rendered in various formats'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    if (version.contains('SNAPSHOT')) {
        // Slows down the build (a lot), use only if local SNAPSHOTS are needed
        mavenLocal()
    }
    mavenCentral()
}

dependencies {
    def tablesawVersion = "0.43.1"
    def jfxVersion = "20.0.2"
    def log4jVersion = "2.20.0"

    org.gradle.internal.os.OperatingSystem os = org.gradle.internal.os.OperatingSystem.current()
    def qualifier = 'unknown'
    if (os.isLinux()) {
        qualifier='linux'
    } else if (os.isWindows()) {
        qualifier = 'win'
    } else if (os.isMacOsX()) {
        qualifier = 'mac-aarch64'
    }

    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"

    implementation "tech.tablesaw:tablesaw-core:${tablesawVersion}"
    implementation "tech.tablesaw:tablesaw-jsplot:${tablesawVersion}"

    compileOnly "org.openjfx:javafx-controls:${jfxVersion}:$qualifier"

    testImplementation "org.openjfx:javafx-controls:${jfxVersion}:$qualifier"
}

test {
    testLogging.showStandardStreams = true
    // run using gradle -Pheadless=true test
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
    useJUnitPlatform()
}

//Maven Central uploads

nexusPublishing {
    repositories {
        sonatype()
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = 'Tablesaw charts'
                description = "${project.description}"
                url = "https://github.com/Alipsa/tablesaw-charts"
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://raw.githubusercontent.com/Alipsa/tablesaw-charts/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'perNyfelt'
                        name = 'Per Nyfelt'
                    }
                }
                scm {
                    url = 'https://github.com/Alipsa/tablesaw-charts/tree/master'
                    connection = 'scm:git:https://github.com/Alipsa/tablesaw-charts.git'
                    developerConnection = 'scm:git:https://github.com/Alipsa/tablesaw-charts.git'
                }
            }
        }
    }
}

signing {
    if (project.properties['signing.keyId'] != null) {
        project.logger.lifecycle("Signing artifacts...")
        sign publishing.publications.maven
    } else {
        project.logger.lifecycle("signing.keyId is not defined, skipping signing of artifacts...")
    }
}
